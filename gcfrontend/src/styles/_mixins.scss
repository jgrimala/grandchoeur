// styles/_mixins.scss
// Button Styles
@mixin button-style($bg-color: var(--primary),
	$text-color: var(--text-color), // Updated to use the new text color variable

	$padding: $spacing-medium $spacing-large,
	$border-radius: $border-radius-small) {
	background-color: $bg-color;
	color: $text-color;
	padding: $padding;
	border-radius: $border-radius;
	border: none;
	cursor: pointer;
	transition: background-color 0.3s ease;

	&:hover {
		background-color: var(--hover-primary); // Updated to use the new hover primary color variable
	}
}

// Flexbox Utilities
@mixin flex-center {
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin flex-column($align: stretch, $justify: flex-start) {
	display: flex;
	flex-direction: column;
	align-items: $align;
	justify-content: $justify;
}

// Card Styles
@mixin card-style($padding: $spacing-medium,
	$border-radius: $border-radius-small) {
	background-color: var(--surface); // Updated to use the new surface variable
	padding: $padding;
	border-radius: $border-radius;
	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

// Table Styles
@mixin table-style($padding: $spacing-small) {
	width: 100%;
	border-collapse: collapse;

	th,
	td {
		padding: $padding;
		border: 1px solid var(--border); // Updated to use the new border variable
	}
}

// Input Styles
@mixin input-style($padding: $spacing-small,
	$border-radius: $border-radius-small) {
	padding: $padding;
	border: 1px solid var(--border); // Updated to use the new border variable
	border-radius: $border-radius;
}

// Typography Styles
@mixin typography($type) {
	@if $type =='heading' {
		font-family: $font-primary;
		font-size: $font-size-large;
		font-weight: bold;
	}

	@else if $type =='body' {
		font-family: $font-secondary;
		font-size: $font-size-base;
	}

	@else if $type =='small' {
		font-family: $font-secondary;
		font-size: $font-size-small;
	}
}

// Theme Colors
// Corrected theme-colors mixin
@mixin theme-colors($theme) {
	@if $theme =='light' {
		.light {
			--background-primary: #{$light-background};
			--background-secondary: #{$dark-background};

			--surface-primary: #{$light-surface};
			--surface-secondary: #{$dark-surface};

			--text-color-primary: #{$light-text};
			--text-color-secondary: #{$dark-text};

			--muted-text: #{$light-muted-text};
			--border: #{$light-accent};
			--accent: #{$light-accent};
			--hover-primary: #{$light-hover-primary};

			--border-on-dark: 1px solid var(--border);
			--border-on-light: none;
		}
	}

	@else if $theme =='dark' {
		.dark {
			--background-primary: #{$dark-background};
			--background-secondary: #{$light-background};

			--surface-primary: #{$dark-surface};
			--surface-secondary: #{$light-surface};

			--text-color-primary: #{$dark-text};
			--text-color-secondary: #{$light-text};

			--muted-text: #{$dark-muted-text};
			--border: #{$dark-accent};
			--accent: #{$dark-accent};
			--hover-primary: #{$dark-hover-primary};
			--border-on-dark: none;
			--border-on-light: 1px solid var(--border);
		}
	}
}

// Font Size Mixins
@mixin set-font-size($breakpoint) {
	@each $key, $size in $media {
	  @if $breakpoint == $key {
		.line {
		  --title-font-size: #{map-get($title-font-size, $key)};
		  font-size: var(--title-font-size);
  
		  .subline {
			--subline-font-size: #{map-get($subline-font-size, $key)};
			font-size: var(--subline-font-size);
		  }
		}
  
		.subtitle-line {
		  --subtitle-font-size: #{map-get($subtitle-font-size, $key)};
		  font-size: var(--subtitle-font-size);
		}
  
		.about-link {
		  --link-font-size: #{map-get($link-font-size, $key)};
		  font-size: var(--link-font-size);
		}
	  }
	}
  }

// Padding Mixins
@mixin set-padding($breakpoint) {
	@each $key, $size in $media {
		@if $breakpoint ==$key {

			.title-container,
			.subtitle-line,
			.about-link {
				--title-container-padding: #{map-get($title-container-padding, $key)};
				padding: var(--title-container-padding);
			}
		}
	}
}